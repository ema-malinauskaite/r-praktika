split(., row(.)) %>% sapply(
. %>% sort %>% paste(collapse = "-")
) %>% data.frame() %>%
rename("kontakto_tipas" = ".")
nuline_lentele_atomu$nuliai <- rep(0, times = nrow(nuline_lentele_atomu))
nuline_lentele_atomu <- nuline_lentele_atomu %>%
group_by(kontakto_tipas) %>%
summarise(nuliai = sum(nuliai)) %>%
transpose(make.names = "kontakto_tipas")
pavadinimai <- nuline_lentele_atomu %>%
transpose(keep.names = "kontakto_tipas") %>%
slice(-225) %>%
select(-V1)
pavadinimai
grupavimo_lentele <- grupavimo_failas %>%
mutate_all(na_if,"") %>%
tibble::column_to_rownames(var = "V1")
grupes_pavadinimai <- rownames(grupavimo_lentele)
nuline_lentele_atomu_grupiu_pavadinimai<- data.frame(1:(nrow(grupavimo_lentele)^2))
nuline_lentele_atomu_grupiu_pavadinimai$pirma <- data.frame(rep(grupes_pavadinimai, each = nrow(grupavimo_lentele)))
nuline_lentele_atomu_grupiu_pavadinimai$antra <- rep(grupes_pavadinimai, times = nrow(grupavimo_lentele))
matrica_pavadinimams_nuline <- as.matrix(data.frame(grupe1 = nuline_lentele_atomu_grupiu_pavadinimai$pirma, grupe2 = nuline_lentele_atomu_grupiu_pavadinimai$antra))
nuline_lentele_atomu <- matrica_pavadinimams_nuline %>%
split(., row(.)) %>% sapply(
. %>% sort %>% paste(collapse = "-")
) %>% data.frame() %>%
rename("kontakto_tipas" = ".")
nuline_lentele_atomu$nuliai <- rep(0, times = nrow(nuline_lentele_atomu))
nuline_lentele_atomu <- nuline_lentele_atomu %>%
group_by(kontakto_tipas) %>%
summarise(nuliai = sum(nuliai)) %>%
transpose(make.names = "kontakto_tipas")
pavadinimai <- nuline_lentele_atomu %>%
transpose(keep.names = "kontakto_tipas") %>%
slice(-225) %>%
select(-V1)
nuline_lentele_atomu
grupavimo_lentele <- grupavimo_failas %>%
mutate_all(na_if,"") %>%
tibble::column_to_rownames(var = "V1")
grupes_pavadinimai <- rownames(grupavimo_lentele)
nuline_lentele_atomu_grupiu_pavadinimai<- data.frame(1:(nrow(grupavimo_lentele)^2))
nuline_lentele_atomu_grupiu_pavadinimai$pirma <- data.frame(rep(grupes_pavadinimai, each = nrow(grupavimo_lentele)))
nuline_lentele_atomu_grupiu_pavadinimai$antra <- rep(grupes_pavadinimai, times = nrow(grupavimo_lentele))
matrica_pavadinimams_nuline <- as.matrix(data.frame(grupe1 = nuline_lentele_atomu_grupiu_pavadinimai$pirma, grupe2 = nuline_lentele_atomu_grupiu_pavadinimai$antra))
nuline_lentele_atomu <- matrica_pavadinimams_nuline %>%
split(., row(.)) %>% sapply(
. %>% sort %>% paste(collapse = "-")
) %>% data.frame() %>%
rename("kontakto_tipas" = ".")
nuline_lentele_atomu$nuliai <- rep(0, times = nrow(nuline_lentele_atomu))
nuline_lentele_atomu <- nuline_lentele_atomu %>%
group_by(kontakto_tipas) %>%
summarise(nuliai = sum(nuliai)) %>%
transpose(make.names = "kontakto_tipas")
pavadinimai <- nuline_lentele_atomu %>%
transpose(keep.names = "kontakto_tipas") %>%
select(-V1)
pavadinimai
tls_sprendimas_visi_baltymai_df <- cbind(pavadinimai, data.frame(tls_sprendimas_visi_baltymai))
tls_sprendimas_visi_baltymai_df
# data.table::fwrite(
#   tls_sprendimas_wt_ir_wtx_df,
#   file = "./rezultatai/koef_visi_lizocimai_qr_metodu_be_TRP.txt",
#   sep = "\t",
#   dec = ".",
#   row.names  = FALSE,
#   col.names  = TRUE,
#   na = ""
# )
tls_sprendimas_visi_baltymai_df %>%  summary()
arrange(tls_sprendimas_visi_baltymai_df, tls_sprendimas_visi_baltymai)
tls_sprendimas_visi_baltymai_df %>%
filter(str_detect(kontakto_tipas, "\\.")) %>%
arrange(tls_sprendimas_visi_baltymai)
apskaiciuotos_temperaturos <-
matricu_lenteles$visu_baltymu_kont_sumu_skirtumai_atom %*% tls_sprendimas_visi_baltymai
apskaiciuotos_ir_teorines_temperaturos_df <- cbind(pdb_tm_wt, data.frame(apskaiciuotos_temperaturos)) %>%
select(-WT)
ggplot(apskaiciuotos_ir_teorines_temperaturos_df) +
aes(x = deltaTm, y = apskaiciuotos_temperaturos) +
geom_point(size = 1L, colour = "#0c4c8a") +
theme_minimal()
apskaiciuotos_ir_teorines_temperaturos_df %>%
mutate(skirtumas = round((deltaTm- apskaiciuotos_temperaturos), digits = 3)) %>%
arrange(skirtumas)
grupavimo_lentele <- grupavimo_failas %>%
mutate_all(na_if,"") %>%
tibble::column_to_rownames(var = "V1")
grupes_pavadinimai <- rownames(grupavimo_lentele)
nuline_lentele_atomu_grupiu_pavadinimai<- data.frame(1:(nrow(grupavimo_lentele)^2))
nuline_lentele_atomu_grupiu_pavadinimai$pirma <- data.frame(rep(grupes_pavadinimai, each = nrow(grupavimo_lentele)))
nuline_lentele_atomu_grupiu_pavadinimai$antra <- rep(grupes_pavadinimai, times = nrow(grupavimo_lentele))
matrica_pavadinimams_nuline <- as.matrix(data.frame(grupe1 = nuline_lentele_atomu_grupiu_pavadinimai$pirma, grupe2 = nuline_lentele_atomu_grupiu_pavadinimai$antra))
nuline_lentele_atomu <- matrica_pavadinimams_nuline %>%
split(., row(.)) %>% sapply(
. %>% sort %>% paste(collapse = "-")
) %>% data.frame() %>%
rename("kontakto_tipas" = ".")
nuline_lentele_atomu$nuliai <- rep(0, times = nrow(nuline_lentele_atomu))
nuline_lentele_atomu <- nuline_lentele_atomu %>%
group_by(kontakto_tipas) %>%
summarise(nuliai = sum(nuliai)) %>%
transpose(make.names = "kontakto_tipas")
pavadinimai <- nuline_lentele_atomu %>%
transpose(keep.names = "kontakto_tipas") %>%
select(-V1)
pavadinimai
grupavimo_failas <- data.table::fread(
"/Users/user/Desktop/praktika/r-praktika/atom types/RESIDUE.atoms",
dec = ".", header = FALSE, skip = 1, encoding = "UTF-8", fill = TRUE,
data.table = FALSE
)
lizocimai_pagr <- readr::read_rds("./data/pro_344_sm_suppinfo.rds")
pdb_tm_wt <- lizocimai_pagr %>%
select(pdb, deltaTm, WT) %>%
drop_na(pdb, deltaTm) %>%
filter(pdb != "2LZM" & pdb != "1L63") %>%
.[-(105:121),]
pdb_tm_wt
matricu_lenteles <- fun_matricu_paruosimas_atom(pdb_termo_lent = pdb_tm_wt, grupavimo_failas = grupavimo_failas)
A <- matricu_lenteles$visu_baltymu_kont_sumu_skirtumai_atom[, -225]
b <- c(matricu_lenteles$termo_skirtumai_atom)
dim(A)
A <- matricu_lenteles$visu_baltymu_kont_sumu_skirtumai_atom
b <- c(matricu_lenteles$termo_skirtumai_atom)
dim(A)
A <- matricu_lenteles$visu_baltymu_kont_sumu_skirtumai_atom
b <- c(matricu_lenteles$termo_skirtumai_atom)
dim(A)
A
A <- matricu_lenteles$visu_baltymu_kont_sumu_skirtumai_atom[, -205]
b <- c(matricu_lenteles$termo_skirtumai_atom)
dim(A)
A
A <- matricu_lenteles$visu_baltymu_kont_sumu_skirtumai_atom[, -205]
b <- c(matricu_lenteles$termo_skirtumai_atom)
dim(A)
rankifremoved <- sapply(1:ncol(A), function (x) qr(A[,-x])$rank)
rankifremoved
which(rankifremoved == max(rankifremoved))
tls_sprendimas_visi_baltymai <- pracma::qrSolve(A, b)
grupavimo_lentele <- grupavimo_failas %>%
mutate_all(na_if,"") %>%
tibble::column_to_rownames(var = "V1")
grupes_pavadinimai <- rownames(grupavimo_lentele)
nuline_lentele_atomu_grupiu_pavadinimai<- data.frame(1:(nrow(grupavimo_lentele)^2))
nuline_lentele_atomu_grupiu_pavadinimai$pirma <- data.frame(rep(grupes_pavadinimai, each = nrow(grupavimo_lentele)))
nuline_lentele_atomu_grupiu_pavadinimai$antra <- rep(grupes_pavadinimai, times = nrow(grupavimo_lentele))
matrica_pavadinimams_nuline <- as.matrix(data.frame(grupe1 = nuline_lentele_atomu_grupiu_pavadinimai$pirma, grupe2 = nuline_lentele_atomu_grupiu_pavadinimai$antra))
nuline_lentele_atomu <- matrica_pavadinimams_nuline %>%
split(., row(.)) %>% sapply(
. %>% sort %>% paste(collapse = "-")
) %>% data.frame() %>%
rename("kontakto_tipas" = ".")
nuline_lentele_atomu$nuliai <- rep(0, times = nrow(nuline_lentele_atomu))
nuline_lentele_atomu <- nuline_lentele_atomu %>%
group_by(kontakto_tipas) %>%
summarise(nuliai = sum(nuliai)) %>%
transpose(make.names = "kontakto_tipas")
pavadinimai <- nuline_lentele_atomu %>%
transpose(keep.names = "kontakto_tipas") %>%
slice(-205) %>%
select(-V1)
pavadinimai
tls_sprendimas_visi_baltymai_df <- cbind(pavadinimai, data.frame(tls_sprendimas_visi_baltymai))
tls_sprendimas_visi_baltymai_df
# data.table::fwrite(
#   tls_sprendimas_wt_ir_wtx_df,
#   file = "./rezultatai/koef_visi_lizocimai_qr_metodu_be_TRP.txt",
#   sep = "\t",
#   dec = ".",
#   row.names  = FALSE,
#   col.names  = TRUE,
#   na = ""
# )
tls_sprendimas_visi_baltymai_df %>%  summary()
arrange(tls_sprendimas_visi_baltymai_df, tls_sprendimas_visi_baltymai)
tls_sprendimas_visi_baltymai_df %>%
filter(str_detect(kontakto_tipas, "\\.")) %>%
arrange(tls_sprendimas_visi_baltymai)
apskaiciuotos_temperaturos <-
matricu_lenteles$visu_baltymu_kont_sumu_skirtumai_atom[, -205] %*% tls_sprendimas_visi_baltymai
apskaiciuotos_ir_teorines_temperaturos_df <- cbind(pdb_tm_wt, data.frame(apskaiciuotos_temperaturos)) %>%
select(-WT)
ggplot(apskaiciuotos_ir_teorines_temperaturos_df) +
aes(x = deltaTm, y = apskaiciuotos_temperaturos) +
geom_point(size = 1L, colour = "#0c4c8a") +
theme_minimal()
apskaiciuotos_ir_teorines_temperaturos_df %>%
mutate(skirtumas = round((deltaTm- apskaiciuotos_temperaturos), digits = 3)) %>%
arrange(skirtumas)
apskaiciuotos_temperaturos <-
matricu_lenteles$visu_baltymu_kont_sumu_skirtumai_atom[, -205] %*% tls_sprendimas_visi_baltymai
apskaiciuotos_ir_teorines_temperaturos_df <- cbind(pdb_tm_wt, data.frame(apskaiciuotos_temperaturos)) %>%
select(-WT)
ggplot(apskaiciuotos_ir_teorines_temperaturos_df) +
aes(x = deltaTm, y = apskaiciuotos_temperaturos) +
geom_point(size = 1L, colour = "#0c4c8a") +
theme_minimal()
apskaiciuotos_ir_teorines_temperaturos_df %>%
mutate(skirtumas = round((deltaTm- apskaiciuotos_temperaturos), digits = 3)) %>%
arrange(skirtumas)
tls_sprendimas_visi_baltymai_df %>%  summary()
apskaiciuotos_temperaturos <-
matricu_lenteles_visi_baltymai$visu_baltymu_kont_sumu_skirtumai[, -225] %*% tls_sprendimas_visi_baltymai
tls_sprendimas_visi_baltymai_df %>%  summary()
apskaiciuotos_temperaturos <-
matricu_lenteles$visu_baltymu_kont_sumu_skirtumai_atom[, -205] %*% tls_sprendimas_visi_baltymai
apskaiciuotos_ir_teorines_temperaturos_df <- cbind(pdb_tm_wt, data.frame(apskaiciuotos_temperaturos)) %>%
select(-WT)
ggplot(apskaiciuotos_ir_teorines_temperaturos_df) +
aes(x = deltaTm, y = apskaiciuotos_temperaturos) +
geom_point(size = 1L, colour = "#0c4c8a") +
theme_minimal()
apskaiciuotos_ir_teorines_temperaturos_df %>%
mutate(skirtumas = round((deltaTm- apskaiciuotos_temperaturos), digits = 3)) %>%
arrange(skirtumas)
tls_sprendimas_visi_baltymai_df %>%  summary()
apskaiciuotos_temperaturos <-
matricu_lenteles_visi_baltymai$visu_baltymu_kont_sumu_skirtumai[, -225] %*% tls_sprendimas_visi_baltymai
lizocimai_pagr <- readr::read_rds("../data/pro_344_sm_suppinfo.rds")
nuline_lentele_platusis <- readr::read_rds("../data/nuline_lentele_platusis.rds")
wtx_1L63_platusis <- readr::read_rds("../data/wtx_1L63_platusis.rds")
wt_2LZM_platusis <- readr::read_rds("../data/wt_2LZM_platusis.rds")
pdb_tm_visi_baltymai <- lizocimai_pagr %>%
select(pdb, deltaTm, WT) %>%
drop_na(pdb, deltaTm) %>%
filter(pdb != "2LZM" & pdb != "1L63")
pdb_tm_visi_baltymai
matricu_lenteles_visi_baltymai <- fun_kont_sum_ir_temp_skirtumams(pdb_tm_visi_baltymai, wtx_platusis = wtx_1L63_platusis, wt_platusis = wt_2LZM_platusis, nuline_lentele_platusis)
#input:
# pdb_termo_lent - lentele, kurioje vienas stulpelis pasirinktas termodinaminis parametras, kitas stulpelis pdb failo pavadinimas
# WT_platusis - sutvarkyta pasirinkto wt placiojo formato, su kuriuo bus lyginami kiti baltymai lentele su kontaktu plotu sumomis
# WT_termo - pasirinkto termodinaminio parametro reiksme pasirinktam WT tipui
# nul_lent_plat - nuline lentele skirta fun_kontaktu_sumai
fun_kont_sum_ir_temp_skirtumams <- function(pdb_termo_lent, wt_platusis, wtx_platusis, nul_lent_plat) {
visu_baltymu_kont_sumu_skirtumai <- data.frame()
termo_skirtumai <- data.frame() #desine tiesiniu lygciu sistemos puse matricose
#----
for (i in pdb_termo_lent$pdb) {
lizocimo_kontaktai <- data.table::fread(paste("../lizocimai/",i,".contacts.interresidue.table", sep = ""))
kontaktu_sumos <- fun_kontaktu_sumai(lizocimo_kontaktai, nul_lent_plat)
viena_eilute <- pdb_termo_lent %>%
filter(pdb == i)
if (viena_eilute$WT == "wt") {
wt_ir_lizocimas <- rbind(wt_platusis, kontaktu_sumos) %>%
transpose(keep.names = "kontakto_tipas") %>%
mutate(kont_sumu_skirtumas = V1 - V2) %>%
select(kontakto_tipas, kont_sumu_skirtumas) %>%
transpose(make.names = "kontakto_tipas")
} else {
wt_ir_lizocimas <- rbind(wtx_platusis, kontaktu_sumos) %>%
transpose(keep.names = "kontakto_tipas") %>%
mutate(kont_sumu_skirtumas = V1 - V2) %>%
select(kontakto_tipas, kont_sumu_skirtumas) %>%
transpose(make.names = "kontakto_tipas")
}
visu_baltymu_kont_sumu_skirtumai <- rbind(visu_baltymu_kont_sumu_skirtumai, wt_ir_lizocimas)
lizocimo_kontaktai = NULL
}
termo_skirtumai <- pdb_termo_lent %>%
select(-WT, -pdb)# %>%
#transpose(make.names = "pdb")
return(list(visu_baltymu_kont_sumu_skirtumai = as.matrix(visu_baltymu_kont_sumu_skirtumai),termo_skirtumai = as.matrix(termo_skirtumai)))
}
fun_kontaktu_sumai <- function(liz_kont, nul_lentele_plat) { #pirmas - kontaktu lentele, antras - nuline lentele
liz_kont <- liz_kont %>%
mutate(V6 = recode_factor(V6,"MSE" = "MET")) %>%
mutate(V13 = recode_factor(V13,"MSE" = "MET"))
liz_kont_matrica <- as.matrix(data.frame(ar_1 = liz_kont$V6, ar_2 = liz_kont$V13))
surusiuoti_pavad <- liz_kont_matrica %>%
split(., row(.)) %>% sapply(
. %>% sort %>% paste(collapse = "_")
) %>% data.frame
kont_sumos <- cbind(liz_kont, surusiuoti_pavad) %>%
rename(kontakto_tipas = ".") %>%
group_by(kontakto_tipas) %>%
summarise(kontakto_suma = sum(V15))
kont_sumos_plat <- spread(kont_sumos, kontakto_tipas, kontakto_suma)
sujungta <- full_join(nul_lentele_plat, kont_sumos_plat) %>%
gather() %>%
group_by(key) %>%
summarise(kontakto_suma = sum(value)) %>%
mutate_all(~replace(., is.na(.), 0)) %>%
spread(., key, kontakto_suma)
return(sujungta)
}
matricu_lenteles_visi_baltymai <- fun_kont_sum_ir_temp_skirtumams(pdb_tm_visi_baltymai, wtx_platusis = wtx_1L63_platusis, wt_platusis = wt_2LZM_platusis, nuline_lentele_platusis)
A <- matricu_lenteles_visi_baltymai$visu_baltymu_kont_sumu_skirtumai %>% .[, -225] #.[-c(230:328), -225]
b <- c(matricu_lenteles_visi_baltymai$termo_skirtumai) # %>% .[-c(230:328)]
dim(A)
#tls_sprendimas_wt_ir_wtx <- solve(A, b)
tls_sprendimas_visi_baltymai <- pracma::qrSolve(A, b)
pavadinimai <- nuline_lentele_platusis %>%
transpose(keep.names = "kontakto_tipas") %>%
slice(-225) %>%
select(-V1)
tls_sprendimas_visi_baltymai_df <- cbind(pavadinimai, data.frame(tls_sprendimas_visi_baltymai))
tls_sprendimas_visi_baltymai_df
# data.table::fwrite(
#   tls_sprendimas_wt_ir_wtx_df,
#   file = "./rezultatai/koef_visi_lizocimai_qr_metodu_be_TRP.txt",
#   sep = "\t",
#   dec = ".",
#   row.names  = FALSE,
#   col.names  = TRUE,
#   na = ""
# )
tls_sprendimas_visi_baltymai_df %>%  summary()
arrange(tls_sprendimas_visi_baltymai_df, tls_sprendimas_visi_baltymai)
tls_sprendimas_visi_baltymai_df %>%
filter(str_detect(kontakto_tipas, "\\.")) %>%
arrange(tls_sprendimas_visi_baltymai)
#Temperaturos skirtumo reiksme teigiama - sumazejes antro baltymo lyginant su pirmuoju stabilumas, neigiama - padidejes stabilumas
#Jeigu antrajame baltyme padidideja atitinkamo kontakto plotu suma (padaugeja kontaktu), plotu skirtumas bus neigiamas, dauginant ji is neigiamo koeficiento, reiksme bus teigiama, todel temperaturu skirtumas dides, o stabilumas mazes. Su teigiamais koeficientais atvirksciai.
#Isvada, kad neigiami koeficientai stabiluma didina mazejant atitinkamo kontakto sumai (mazina stabiluma daugejant kontaktu) lyginant su pirmu baltymu, o tegiami koeficientai stabiluma didina didejant atitinkamo kontakto tipo sumai
ggplot(tls_sprendimas_visi_baltymai_df) +
aes(x = tls_sprendimas_visi_baltymai) +
geom_histogram(bins = 30L, fill = "#0c4c8a") +
theme_minimal()
tls_sprendimas_visi_baltymai_df %>%  summary()
apskaiciuotos_temperaturos <-
matricu_lenteles_visi_baltymai$visu_baltymu_kont_sumu_skirtumai[, -225] %*% tls_sprendimas_visi_baltymai
apskaiciuotos_ir_teorines_temperaturos_df <- cbind(pdb_tm_visi_baltymai, data.frame(apskaiciuotos_temperaturos)) %>%
select(-WT)
ggplot(apskaiciuotos_ir_teorines_temperaturos_df) +
aes(x = deltaTm, y = apskaiciuotos_temperaturos) +
geom_point(size = 1L, colour = "#0c4c8a") +
theme_minimal()
apskaiciuotos_ir_teorines_temperaturos_df %>%
mutate(skirtumas = round((deltaTm- apskaiciuotos_temperaturos), digits = 3)) %>%
arrange(skirtumas)
ggplot(tls_sprendimas_visi_baltymai_df) +
aes(x = tls_sprendimas_visi_baltymai) +
geom_histogram(bins = 30L, fill = "#0c4c8a") +
theme_minimal()
tls_sprendimas_visi_baltymai_df %>%  summary()
apskaiciuotos_temperaturos <-
matricu_lenteles$visu_baltymu_kont_sumu_skirtumai_atom[, -205] %*% tls_sprendimas_visi_baltymai
grupavimo_failas <- data.table::fread(
"/Users/user/Desktop/praktika/r-praktika/atom types/RESIDUE.atoms",
dec = ".", header = FALSE, skip = 1, encoding = "UTF-8", fill = TRUE,
data.table = FALSE
)
lizocimai_pagr <- readr::read_rds("./data/pro_344_sm_suppinfo.rds")
pdb_tm_wt <- lizocimai_pagr %>%
select(pdb, deltaTm, WT) %>%
drop_na(pdb, deltaTm) %>%
filter(pdb != "2LZM" & pdb != "1L63") %>%
.[-(105:121),]
pdb_tm_wt
grupavimo_failas <- data.table::fread(
"/Users/user/Desktop/praktika/r-praktika/atom types/RESIDUE.atoms",
dec = ".", header = FALSE, skip = 1, encoding = "UTF-8", fill = TRUE,
data.table = FALSE
)
lizocimai_pagr <- readr::read_rds("./data/pro_344_sm_suppinfo.rds")
pdb_tm_wt <- lizocimai_pagr %>%
select(pdb, deltaTm, WT) %>%
drop_na(pdb, deltaTm) %>%
filter(pdb != "2LZM" & pdb != "1L63") %>%
.[-(105:121),]
pdb_tm_wt
matricu_lenteles <- fun_matricu_paruosimas_atom(pdb_termo_lent = pdb_tm_wt, grupavimo_failas = grupavimo_failas)
A <- matricu_lenteles$visu_baltymu_kont_sumu_skirtumai_atom[, -205]
b <- c(matricu_lenteles$termo_skirtumai_atom)
dim(A)
rankifremoved <- sapply(1:ncol(A), function (x) qr(A[,-x])$rank)
rankifremoved
which(rankifremoved == max(rankifremoved))
tls_sprendimas_visi_baltymai <- pracma::qrSolve(A, b)
grupavimo_lentele <- grupavimo_failas %>%
mutate_all(na_if,"") %>%
tibble::column_to_rownames(var = "V1")
grupes_pavadinimai <- rownames(grupavimo_lentele)
nuline_lentele_atomu_grupiu_pavadinimai<- data.frame(1:(nrow(grupavimo_lentele)^2))
nuline_lentele_atomu_grupiu_pavadinimai$pirma <- data.frame(rep(grupes_pavadinimai, each = nrow(grupavimo_lentele)))
nuline_lentele_atomu_grupiu_pavadinimai$antra <- rep(grupes_pavadinimai, times = nrow(grupavimo_lentele))
matrica_pavadinimams_nuline <- as.matrix(data.frame(grupe1 = nuline_lentele_atomu_grupiu_pavadinimai$pirma, grupe2 = nuline_lentele_atomu_grupiu_pavadinimai$antra))
nuline_lentele_atomu <- matrica_pavadinimams_nuline %>%
split(., row(.)) %>% sapply(
. %>% sort %>% paste(collapse = "-")
) %>% data.frame() %>%
rename("kontakto_tipas" = ".")
nuline_lentele_atomu$nuliai <- rep(0, times = nrow(nuline_lentele_atomu))
nuline_lentele_atomu <- nuline_lentele_atomu %>%
group_by(kontakto_tipas) %>%
summarise(nuliai = sum(nuliai)) %>%
transpose(make.names = "kontakto_tipas")
pavadinimai <- nuline_lentele_atomu %>%
transpose(keep.names = "kontakto_tipas") %>%
slice(-205) %>%
select(-V1)
pavadinimai
tls_sprendimas_visi_baltymai_df <- cbind(pavadinimai, data.frame(tls_sprendimas_visi_baltymai))
tls_sprendimas_visi_baltymai_df
# data.table::fwrite(
#   tls_sprendimas_wt_ir_wtx_df,
#   file = "./rezultatai/koef_visi_lizocimai_qr_metodu_be_TRP.txt",
#   sep = "\t",
#   dec = ".",
#   row.names  = FALSE,
#   col.names  = TRUE,
#   na = ""
# )
tls_sprendimas_visi_baltymai_df %>%  summary()
arrange(tls_sprendimas_visi_baltymai_df, tls_sprendimas_visi_baltymai)
tls_sprendimas_visi_baltymai_df %>%
filter(str_detect(kontakto_tipas, "\\.")) %>%
arrange(tls_sprendimas_visi_baltymai)
ggplot(tls_sprendimas_visi_baltymai_df) +
aes(x = tls_sprendimas_visi_baltymai) +
geom_histogram(bins = 30L, fill = "#0c4c8a") +
theme_minimal()
tls_sprendimas_visi_baltymai_df %>%  summary()
apskaiciuotos_temperaturos <-
matricu_lenteles$visu_baltymu_kont_sumu_skirtumai_atom[, -205] %*% tls_sprendimas_visi_baltymai
apskaiciuotos_ir_teorines_temperaturos_df <- cbind(pdb_tm_wt, data.frame(apskaiciuotos_temperaturos)) %>%
select(-WT)
ggplot(apskaiciuotos_ir_teorines_temperaturos_df) +
aes(x = deltaTm, y = apskaiciuotos_temperaturos) +
geom_point(size = 1L, colour = "#0c4c8a") +
theme_minimal()
apskaiciuotos_ir_teorines_temperaturos_df %>%
mutate(skirtumas = round((deltaTm- apskaiciuotos_temperaturos), digits = 3)) %>%
arrange(skirtumas)
rankifremoved <- sapply(1:ncol(A), function (x) qr(A[,-x])$rank)
which(rankifremoved == max(rankifremoved))
library("tidyverse")
library("data.table")
library("compareDF")
library("tidyr")
library("pracma")
library("readr")
library("caret")
# Load the data
data("swiss")
# Inspect the data
sample_n(swiss, 3)
# Define training control
set.seed(123)
train.control <- trainControl(method = "cv", number = 5)
# Train the model
model <- train(Fertility ~., data = swiss, method = "lm",
trControl = train.control)
# Summarize the results
print(model)
getModelInfo()
getModelInfo()
# Define training control
set.seed(123)
train.control <- trainControl(method = "cv", number = 5)
# Train the model
model <- train(Fertility ~., data = swiss, method = "lm",
trControl = train.control)
# Summarize the results
print(model)
cross_val_duomenys <- cbind(data.frame(A), data.frame(b))
View(cross_val_duomenys)
# Define training control
set.seed(123)
train.control <- trainControl(method = "cv", number = 5)
# Train the model
model <- train(b ~., data = cross_val_duomenys, method = pracma::qrSolve,
trControl = train.control)
# Define training control
set.seed(123)
train.control <- trainControl(method = "cv", number = 5)
# Train the model
model <- train(b ~., data = cross_val_duomenys, method = "pracma::qrSolve",
trControl = train.control)
lpSVM <- list(type = "Regression",
library = "pracma",
loop = NULL)
svmFit <- function(x, y, lev = NULL) {
pracma::qrSolve(
A = as.matrix(x), b = as.matrix(y)
)
}
lpSVM$fit <- svmFit
lpSVM$prob <- NULL
QRdec <- list(type = "Regression",
library = "pracma")
svmFit <- function(x, y, lev = NULL) {
pracma::qrSolve(
A = as.matrix(x), b = as.matrix(y)
)
}
QRdec$fit <- svmFit
QRdec$prob <- NULL
lpSVM$predict <- NULL
# define training control
train_control <- trainControl(method="cv", number=5)
# train the model
model <- train(b ~ ., data=cross_val_duomenys, trControl=train_control, method=QRdec)
QRdec <- list(type = "Regression",
library = "pracma")
svmFit <- function(x, y, lev = NULL) {
pracma::qrSolve(
A = as.matrix(x), b = as.matrix(y)
)
}
QRdec$fit <- svmFit
QRdec$prob <- 0
QRdec$predict <- 0
QRdec$grid <- 0
QRdec$parameters <- 0
# define training control
train_control <- trainControl(method="cv", number=5)
# train the model
model <- train(b ~ ., data=cross_val_duomenys, trControl=train_control, method=QRdec)
